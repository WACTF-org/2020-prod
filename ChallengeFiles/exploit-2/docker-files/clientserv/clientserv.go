package main

import (
	"encoding/gob"
	"fmt"
	"log"
	"net"
	"net/http"
	"pkg"
)

func main() {
	fmt.Println("Starting...")
	fs := http.FileServer(http.Dir("/app/clientserv/assets"))
	http.Handle("/", fs)
	http.HandleFunc("/login", login)

	e := http.ListenAndServe(":1337", nil)
	if e != nil {
		log.Panic(e)
	}

}

func login(w http.ResponseWriter, r *http.Request) {

	user := r.FormValue("username")
	pass := r.FormValue("password")
	dest := r.FormValue("server")

	if user == "" || pass == "" || dest == "" {
		w.Write([]byte("Fill in the form properly please"))
		return
	}

	conn, err := net.Dial("tcp", dest)
	if err != nil {
		log.Println("Bad connection", err)
		w.Write([]byte(fmt.Sprintf("Bad connection, %s", err)))
		return
	}

	defer conn.Close()

	enc := gob.NewEncoder(conn)
	dec := gob.NewDecoder(conn)

	structyboi := pkg.LoginMsg{
		Username:        user,
		Password:        pass,
		ImportantNumber: 7,
		FloatingPoint:   1.337,
		SliceOfFloaties: []float64{1.3, 3.7, 1.3, 3.7, 1.3, 3.7, 1.3, 3.7, 1.3, 3.7},
	}
	err = enc.Encode(structyboi)
	if err != nil {
		log.Println(err)
		return
	}
	rsp := pkg.LoginResult{}
	dec.Decode(&rsp)
	if rsp.Success {
		//do flag exchange here
		post := pkg.PostLoginMsg{
			ExtremelyNormalWords: pkg.GetWords(),
		}
		enc.Encode(&post)

		rsp2 := pkg.PostLoginRsp{}
		dec.Decode(&rsp2)
		fmt.Println(rsp2)
		w.Write([]byte("Congratulations, you logged in! we confirmed, and the backend has the flag, it showed us."))
	} else {
		w.Write([]byte("You didn't login good eh. Because this is just dev and definitely not prod, try username/password: admin/AnotherYear?"))
	}
}
