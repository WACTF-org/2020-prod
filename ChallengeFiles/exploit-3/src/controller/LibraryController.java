/**************************************************************************
* AUTHOR:                                                                   
* FILE NAME: LibraryController.java
* CREATED: 12-09-2020
* MODIFIED: Mon 14 Sep 2020 22:10:28
* PURPOSE:                                                                  
***************************************************************************/
package controller;
import java.util.LinkedList;
import java.io.IOException;
import model.Game;
import model.Library;

public class LibraryController
{
    private Library library;
    
    public LibraryController()
    {
        library = new Library("unnamed-library");
    }

    public void newLibrary(String name) throws IllegalArgumentException
    {
        try
        {
            this.library = new Library(name);
        }
        catch(IllegalArgumentException iae)
        {
            throw new IllegalArgumentException("Could not initialise library: "+ iae.getMessage());
        }
    }

    public int addGameToLibrary(String name, Game.Rating rating, int barcode, String publisher)
    {
        Game g = new Game(name, publisher, rating, barcode);
        return this.library.addGame(g);
    }

    public Game removeGameFromLibrary(int id)
    {
        return library.removeGame(id);
    }

    public LinkedList<Game> getGamesFromLibrary()
    {
        return library.getGames();
    }

    public int editGameInLibrary(int id, String name, Game.Rating rating, int barcode, String publisher)
    {
        //TODO
        return id;
    }

    public void loadLibrary(String fileName) throws IOException
    {
        FileHandler handler = new FileHandler();
        Object raw = null;
        raw = handler.loadState(fileName);
        try
        {
            this.library = (Library)raw;
        }
        catch(ClassCastException cce)
        {
            throw new IOException("Error loading file!");
        }

    }

    public void saveLibrary(String fileName) throws IOException
    {
        FileHandler handler = new FileHandler();
        handler.saveState(library, fileName);
    }
}
