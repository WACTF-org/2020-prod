/**************************************************************************
* AUTHOR:                                                                   
* FILE NAME: LibraryAnalyser.java
* CREATED: 12-09-2020
* MODIFIED: Sat 12 Sep 2020 15:28:19
* PURPOSE:                                                                  
***************************************************************************/
package controller;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class LibraryAnalyser
{
    public LibraryAnalyser()
    {

    }

    private void secretAlgorithmCheck1() 
    {
        char ch = 'i';

        if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' )
            System.out.println(ch + " is vowel");
        else
            System.out.println(ch + " is consonant");
    }

    private void secretAlgorithmCheck2() 
    {

        int num = 1234, reversed = 0;

        while(num != 0) {
            int digit = num % 10;
            reversed = reversed * 10 + digit;
            num /= 10;
        }
    }

    private void algche2pass()
    {
        int low = 999, high = 99999;

        for(int number = low + 1; number < high; ++number) {

            if (secretblah(number))
                System.out.print(number + " ");
        }
    }

    private boolean secretblah(int num) 
    {
        int digits = 0;
        int result = 0;
        int originalNumber = num;

        // number of digits calculation
        while (originalNumber != 0) {
            originalNumber /= 10;
            ++digits;
        }

        originalNumber = num;

        // result contains sum of nth power of its digits
        while (originalNumber != 0) {
            int remainder = originalNumber % 10;
            result += Math.pow(remainder, digits);
            originalNumber /= 10;
        }

        if (result == num)
            return true;

        return false;
    }

    public void getFlag()
    {
        File f = null;
        Scanner reader = null;
        try 
        {
            f = new File("/flag.txt");
            reader = new Scanner(f);
            while (reader.hasNextLine()) 
            {
                String flag = reader.nextLine();
                System.out.println(flag);
                System.exit(0);
            }
        } 
        catch (FileNotFoundException fnfe) 
        {
            System.out.println("Could not print flag?");
        }
        finally
        {
            if(reader !=null)
            {
                reader.close();
            }
        }
    }

    private void algorithmsoi()
    {
        int low = 20, high = 50;

        while (low < high) {
            boolean flag = false;

            for(int i = 2; i <= low/2; ++i) {
                // condition for nonprime number
                if(low % i == 0) {
                    flag = true;
                    break;
                }
            }

            if (!flag && low != 0 && low != 1)
                System.out.print(low + " ");

            ++low;
        }
    }

    private void complexThing()
    {
        int num = 10;
        long factorial = 1;
        for(int i = 1; i <= num; ++i)
        {
            // factorial = factorial * i;
            factorial *= i;
        }
    }
}